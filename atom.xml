<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hexo]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://crazyhoney.github.io/"/>
  <updated>2016-03-13T09:43:03.556Z</updated>
  <id>http://crazyhoney.github.io/</id>
  
  <author>
    <name><![CDATA[wayne Hao]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://crazyhoney.github.io/2016/03/13/hello/"/>
    <id>http://crazyhoney.github.io/2016/03/13/hello/</id>
    <published>2016-03-13T09:43:43.589Z</published>
    <updated>2016-03-13T09:43:03.556Z</updated>
    <content type="html"><![CDATA[<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * EasyFactory.cpp</span><br><span class="line"> *</span><br><span class="line"> *  Created on: 2016年3月11日 下午10:55:57</span><br><span class="line"> *      Author: Wayne 13186259527@163.com</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> 简单工厂模式</span><br><span class="line"> 实现简单的加减乘除</span><br><span class="line"> */</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">//操作基类</span><br><span class="line">class Operation &#123;</span><br><span class="line">public:</span><br><span class="line">	Operation() &#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	//实现多态的虚函数</span><br><span class="line">	virtual double Calc(double x, double y) &#123;</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line">	;</span><br><span class="line"></span><br><span class="line">	~Operation() &#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">class Add: public Operation &#123;</span><br><span class="line">public:</span><br><span class="line">	Add() &#123;</span><br><span class="line">	&#125;</span><br><span class="line">	;</span><br><span class="line">	double Calc(double x, double y) &#123;</span><br><span class="line">		return x + y;</span><br><span class="line">	&#125;</span><br><span class="line">	~Add() &#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">class Sub: public Operation &#123;</span><br><span class="line">public:</span><br><span class="line">	Sub() &#123;</span><br><span class="line">	&#125;</span><br><span class="line">	;</span><br><span class="line">	double Calc(double x, double y) &#123;</span><br><span class="line">		return x - y;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">class Mul: public Operation &#123;</span><br><span class="line">public:</span><br><span class="line">	Mul() &#123;</span><br><span class="line">	&#125;;</span><br><span class="line">	double Calc(double x, double y) &#123;</span><br><span class="line">		return x * y;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">class Div: public Operation &#123;</span><br><span class="line">public:</span><br><span class="line">	Div() &#123;</span><br><span class="line">	&#125;;</span><br><span class="line">	double Calc(double x, double y) &#123;</span><br><span class="line">		if (y == 0) &#123;</span><br><span class="line">			cout &lt;&lt; "0不能作为被除数" &lt;&lt; endl;</span><br><span class="line">			exit(0);</span><br><span class="line">		&#125;</span><br><span class="line">		return x / y;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">//工厂类</span><br><span class="line">class Factory &#123;</span><br><span class="line">public:</span><br><span class="line">	Factory() &#123;</span><br><span class="line">	&#125;</span><br><span class="line">	static Operation * Count(char c) &#123;</span><br><span class="line">		Operation *q = NULL;</span><br><span class="line">		switch (c) //根据传入的符号来判断创建什么子类</span><br><span class="line">		&#123;</span><br><span class="line">		case '+':</span><br><span class="line">			q = new Add();</span><br><span class="line">			break;</span><br><span class="line">		case '-':</span><br><span class="line">			q = new Sub();</span><br><span class="line">			break;</span><br><span class="line">		case '*':</span><br><span class="line">			q = new Mul();</span><br><span class="line">			break;</span><br><span class="line">		case '/':</span><br><span class="line">			q = new Div();</span><br><span class="line">			break;</span><br><span class="line">		&#125;</span><br><span class="line">		return q;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">int main(void) &#123;</span><br><span class="line">	cout &lt;&lt; "请输入算式：" &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; "eg:5+8" &lt;&lt; endl;</span><br><span class="line">	double x, y;</span><br><span class="line">	char c;</span><br><span class="line">	cin &gt;&gt; x &gt;&gt; c &gt;&gt; y;</span><br><span class="line">	double result;</span><br><span class="line">	Operation *p = Factory::Count(c); //这里将条件传入到Factory的Count静态方法中，返回对应的子类对象</span><br><span class="line">	result = p-&gt;Calc(x, y); //基类指针指向它，调用对应的方法。</span><br><span class="line">	cout &lt;&lt; "result = " &lt;&lt; result &lt;&lt; endl;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[设计模式（一）]]></title>
    <link href="http://crazyhoney.github.io/2016/03/11/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://crazyhoney.github.io/2016/03/11/设计模式（一）/</id>
    <published>2016-03-11T15:50:00.000Z</published>
    <updated>2016-03-11T15:55:24.425Z</updated>
    <content type="html"><![CDATA[<h1 id="u8BBE_u8BA1_u6A21_u5F0F"><a href="#u8BBE_u8BA1_u6A21_u5F0F" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="u8BBE_u8BA1_u6A21_u5F0F_u7B2C_u4E00_u76D8"><a href="#u8BBE_u8BA1_u6A21_u5F0F_u7B2C_u4E00_u76D8" class="headerlink" title="设计模式第一盘"></a>设计模式第一盘</h2><ul>
<li>hello</li>
<li>你好<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(x);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u8BBE_u8BA1_u6A21_u5F0F"><a href="#u8BBE_u8BA1_u6A21_u5F0F" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="u8BBE_u8BA1_u6A21_u]]>
    </summary>
    
  </entry>
  
</feed>
